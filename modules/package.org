#+TITLE: package: Emacs Package Manager
#+AUTHOR: Aqeel Akber

* package

The Emacs Package Manager, intialize and add the MELPA repository.

#+BEGIN_SRC emacs-lisp
  (require 'package)
  (let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                      (not (gnutls-available-p))))
         (url (concat (if no-ssl "http" "https") "://melpa.org/packages/")))
    (add-to-list 'package-archives (cons "melpa" url) t))
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))
  (package-initialize)
#+END_SRC

* Enable use-package

Picked up this trick from [[https://github.com/pmRed/][pmRed]] - the following code block enables the
use of the =(use-package)= function. It takes care of ensuring a
package is installed, loads it up, and sets up settings quite
elegantly.

As usual though, my configuration files have the same name as the
package name. If there are any plugins to a package, I try to setup
the plugin in the configuration for its base package. For example,
=company-irony= is configured in [[company.org]].

#+BEGIN_SRC emacs-lisp
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (eval-when-compile (require 'use-package))

  #+END_SRC
#+BEGIN_SRC emacs-lisp
	(use-package evil :ensure t
	  :init
	  (evil-mode 1))
	(use-package inkpot-theme :ensure t)
#+END_SRC

